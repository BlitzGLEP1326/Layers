/****** MTREXAPI.H ************** Gorbunov A.V. ****** 28/10/05 ****
******* MTREXAPI.H ************** Tarakanova I.R. **** 05/10/05 ****
*                                                                  *
*              Copyright (c) PANORAMA Group 1991-2005              *
*                      All Rights Reserved                         *
*                                                                  *
********************************************************************
*                                                                  *
*                  FOR  WINDOWS95 & WINDOWS NT                     *
*                                                                  *
********************************************************************
*                                                                  *
*          ФУНКЦИИ БИБЛИОТЕКИ (GIS\GSS)MAPMTREX.DLL                *
*                                                                  *
*******************************************************************/

#ifndef MTREXAPI_H
#define MTREXAPI_H

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//++++++  ВСПОМОГАТЕЛЬНЫЕ СТРУКТУРЫ  ++++++++++++++++++++++++++++++
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

 // РЕЗУЛЬТАТЫ ПРЕДВАРИТЕЛЬНОЙ ОЦЕНКИ ХАРАКТЕРИСТИК    
 // СОЗДАВАЕМОЙ МАТРИЦЫ

 typedef struct PRIORMTRPARM
 {
   long int Length;            // Размер данной структуры : 
                               //  sizeof (PRIORMTRPARM) = 64
   long int Free;              // Должен быть ноль

   double AbsHeightDifference; // Ошибка наложения высот - абсолютная
                               // величина разности высот объектов
                               // попадающих в элементы матрицы (метры)

   double Reserve[6];          // Должны быть нули
 }
   PRIORMTRPARM;


//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//+++++++  ФУНКЦИИ БИБЛИОТЕКИ MAPMTREX.DLL  +++++++++++++++++++++++
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

extern "C"
{

 // Вычисление значения абсолютной высоты (point->H) в заданной
 // точке (point->X,point->Y) по данным векторной карты.
 // Координаты точки задаются в метрах в системе координат
 // векторной карты.
 // В случае ошибки при вычислении высоты возвращает 0.

 long int _export WINAPI mtrCalcAbsoluteHeight(HMAP hMap,XYHDOUBLE* point);

 // Вычисление значения абсолютной высоты в заданной
 // точке (point->X,point->Y) по данным векторной карты.
 // Координаты точки задаются в метрах в системе координат
 // векторной карты.
 // sectorcount - количество направлений для поиска окружающих высот
 //  (должно быть кратно 4, минимальное количество направлений = 4,
 //   максимальное = 256).
 // Возвращает значение высоты в метрах.
 // В случае ошибки при вычислении высоты возвращает ERRORHEIGHT.

 double _export WINAPI  mtrCalcAbsoluteHeightBySectors(HMAP hMap,
                                                       DOUBLEPOINT* point,
                                                       long int sectorcount);

 // Вычисление значения характеристики в заданной точке
 // по данным векторной карты.
 // Характеристика задаётся кодом семантики - semanticCode.
 // Координаты точки (point->X,point->Y) задаются в метрах в
 // системе координат векторной карты.
 // Вычисленное значение характеристики заносится в value.
 // flagSelect - флаг использования условий отбора объектов карты.
 // Если flagSelect = 0, то выполняется поиск заданной характеристики
 // по всем объектам векторной карты.
 // Если flagSelect = 1, то поиск заданной характеристики выполняется
 // только по объектам, удовлетворяющим условиям отбора (HSELECT),
 // установленным для векторной карты.
 // В случае ошибки возвращает 0

 long int _export WINAPI mtrCalcCharacteristic(HMAP hMap,
                                               DOUBLEPOINT* point,
                                               long int semanticCode,
                                               long int flagSelect,
                                               double*  value);


  // Предварительная оценка характеристик матрицы, создаваемой
  // по векторной карте на заданный участок района работ.
  // В процессе оценки выполняется преобразование исходных
  // векторных данных района в растровый вид.
  // При ошибке возвращает ноль.
  // hMap    - исходная карта для построения матрицы,
  // filtername - полное имя фильтра объектов
  //   Вместе с картой может располагаться фильтр объектов -
  //   текстовый файл MTRCREA.IMH, содержащий перечень кодов
  //   объектов, используемых при построении матрицы (см. MAPAPI.DOC)
  //   Если filtername равно нулю - фильтр объектов не используется.
  // buildparm - параметры создаваемой матрицы,
  // priorparm - результаты предварительной оценки,
  // handle   - идентификатор окна диалога, которому посылаются
  // сообщения о ходе процесса :
  //   0x0581 - сообщение о проценте выполненных работ (в WPARAM),
  //   если процесс должен быть принудительно завершен, в ответ
  //   должно вернуться значение 0x0581.
  //   Если handle равно нулю - сообщения не посылаются.

  long int _export WINAPI mtrTryBuild(HMAP hMap,
                                      const char * filtername,
                                      BUILDMTW * buildparm,
                                      PRIORMTRPARM * priorparm,
                                      HWND handle);


 // Вычисление значения максимального уклона и направления(азимут) максимального
 // уклона в заданной точке (point) по данным матрицы высот.
 // Координаты точки задаются в метрах в системе координат векторной карты.
 // Возвращает:
 //  incline - уклон в радианах
 //  azimuth  - азимут радианах
 // В случае ошибки при вычислении возвращает 0.
 long int _export WINAPI  mtrCalcInclineInPoint(HMAP hMap,
                                                DOUBLEPOINT * point,
                                                double * incline,
                                                double * azimuth);


 // Построение растра качеств по векторной карте на заданный
 // участок района работ
 // При ошибке возвращает ноль
 // hMap    - исходная карта для построения растра,
 // rstname - полное имя создаваемого растра,
 // filtername - полное имя служебного текстового файла
 //   Вместе с картой должен располагаться фильтр объектов -
 //   служебный текстовый файл MАP2RSW.INI, содержащий перечень кодов
 //   объектов, используемых при построении растра
 // mtrparm - параметры создаваемого растра,
 // handle   - идентификатор окна диалога, которому посылаются
 // сообщения о ходе процесса :
 //   0x0581 - сообщение о проценте выполненных работ (в WPARAM),
 //   если процесс должен быть принудительно завершен, в ответ
 //   должно вернуться значение 0x0581.
 // Если handle равно нулю - сообщения не посылаются.

_MAPIMP long int _MAPAPI mtrBuildRaster(HMAP hMap,
                                        const char * rstname,
                                        const char * filtername,
                                        BUILDMTW * rstparm,
                                        HWND handle);
}

#endif // MTREXAPI_H

